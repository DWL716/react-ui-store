[{"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/index.tsx":"1","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/App.tsx":"2","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Menu/subMenu.tsx":"3","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Button/button.tsx":"4","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Menu/menuItem.tsx":"5","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Menu/menu.tsx":"6","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Icon/icon.tsx":"7","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Transition/transition.tsx":"8","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/stories/Header.stories.tsx":"9","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/stories/Page.stories.tsx":"10","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/stories/Button.stories.tsx":"11","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/stories/Header.tsx":"12","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/stories/Button.tsx":"13","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/stories/Page.tsx":"14","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Button/button.stories.tsx":"15","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Input/input.stories.tsx":"16","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Input/input.tsx":"17","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/AutoComplete/autoComplete.stories.tsx":"18","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/AutoComplete/autoComplete.tsx":"19","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/hooks/useDebounce.tsx":"20","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/hooks/useClickOutside.tsx":"21","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Upload/upload.tsx":"22","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Upload/upload.stories.tsx":"23","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Upload/uploadList.tsx":"24","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Progress/progress.tsx":"25","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Upload/dragger.tsx":"26"},{"size":641,"mtime":1617775232707,"results":"27","hashOfConfig":"28"},{"size":940,"mtime":1617865420514,"results":"29","hashOfConfig":"28"},{"size":2815,"mtime":1617184998515,"results":"30","hashOfConfig":"28"},{"size":1631,"mtime":1617343279280,"results":"31","hashOfConfig":"28"},{"size":843,"mtime":1607907970209,"results":"32","hashOfConfig":"28"},{"size":2220,"mtime":1617074709376,"results":"33","hashOfConfig":"28"},{"size":683,"mtime":1617775382962,"results":"34","hashOfConfig":"28"},{"size":781,"mtime":1617180155182,"results":"35","hashOfConfig":"28"},{"size":414,"mtime":1617202310309,"results":"36","hashOfConfig":"28"},{"size":509,"mtime":1617202726077,"results":"37","hashOfConfig":"28"},{"size":708,"mtime":1617341544174,"results":"38","hashOfConfig":"28"},{"size":1356,"mtime":1617200901341,"results":"39","hashOfConfig":"28"},{"size":941,"mtime":1617200901340,"results":"40","hashOfConfig":"28"},{"size":2424,"mtime":1617200901342,"results":"41","hashOfConfig":"28"},{"size":1511,"mtime":1617719288614,"results":"42","hashOfConfig":"28"},{"size":1955,"mtime":1617721709729,"results":"43","hashOfConfig":"28"},{"size":2258,"mtime":1617721724314,"results":"44","hashOfConfig":"28"},{"size":3187,"mtime":1617775664435,"results":"45","hashOfConfig":"28"},{"size":4878,"mtime":1617934033354,"results":"46","hashOfConfig":"28"},{"size":394,"mtime":1617631492369,"results":"47","hashOfConfig":"28"},{"size":499,"mtime":1617631484652,"results":"48","hashOfConfig":"28"},{"size":5995,"mtime":1617891202040,"results":"49","hashOfConfig":"28"},{"size":2466,"mtime":1617891288027,"results":"50","hashOfConfig":"28"},{"size":1428,"mtime":1617873486980,"results":"51","hashOfConfig":"28"},{"size":1049,"mtime":1617873189253,"results":"52","hashOfConfig":"28"},{"size":875,"mtime":1617891084223,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1xhennm",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"63"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/index.tsx",[],["111","112"],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/App.tsx",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Menu/subMenu.tsx",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Button/button.tsx",[],["113","114"],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Menu/menuItem.tsx",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Menu/menu.tsx",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Icon/icon.tsx",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Transition/transition.tsx",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/stories/Header.stories.tsx",[],["115","116"],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/stories/Page.stories.tsx",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/stories/Button.stories.tsx",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/stories/Header.tsx",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/stories/Button.tsx",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/stories/Page.tsx",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Button/button.stories.tsx",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Input/input.stories.tsx",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Input/input.tsx",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/AutoComplete/autoComplete.stories.tsx",["117","118","119"],"import React from 'react'\nimport { storiesOf, Meta, Story } from '@storybook/react'\nimport Icon from '../Icon/icon'\nimport { FontAwesomeIcon, FontAwesomeIconProps } from '@fortawesome/react-fontawesome'\nimport { action } from '@storybook/addon-actions'\nimport { library } from '@fortawesome/fontawesome-svg-core'; // 导入图标仓库\nimport { fas, faSpinner } from '@fortawesome/free-solid-svg-icons'\nimport { AutoComplete, AutoCompleteProps } from './autoComplete'\nlibrary.add(fas) // 需要重新再次添加把图标添加进仓库\ninterface LakerPlayerProps {\n  value: string;\n  number: number;\n}\ninterface GithubUserProps {\n  login: string;\n  url: string;\n  avatar_url: string;\n}\nconst SimpleComplete = () => {\n  // const lakers = ['bradley', 'pope', 'caruso', 'cook', 'cousins',\n  // 'james', 'AD', 'green', 'howard', 'kuzma', 'McGee', 'rando']\n  // const lakersWithNumber = [\n  //   {value: 'bradley', number: 11},\n  //   {value: 'pope', number: 1},\n  //   {value: 'caruso', number: 4},\n  //   {value: 'cook', number: 2},\n  //   {value: 'cousins', number: 15},\n  //   {value: 'james', number: 23},\n  //   {value: 'AD', number: 3},\n  //   {value: 'green', number: 14},\n  //   {value: 'howard', number: 39},\n  //   {value: 'kuzma', number: 0},\n  // ]\n  // const handleFetch = (query: string) => {\n  //   return lakers.filter(name => name.includes(query)).map(name => ({value: name}))\n  // }\n  // const handleFetch = (query: string) => {\n  //   return lakersWithNumber.filter(player => player.value.includes(query))\n  // }\n  const handleFetch = (query: string) => {\n    console.log(query);\n    \n    return fetch(`https://api.github.com/search/users?q=${query}`)\n      .then(res => res.json())\n      .then(({ items }) => {\n        console.log(items)\n        return items.slice(0, 10).map((item: any) => ({ value: item.login, ...item }))\n      })\n  }\n\n  // const renderOption = (item: DataSourceType) => {\n  //   const itemWithGithub = item as DataSourceType<GithubUserProps>\n  //   return (\n  //     <>\n  //       <h2>Name: {itemWithGithub.value}</h2>\n  //       <p>url: {itemWithGithub.url}</p>\n  //     </>\n  //   )\n  // }\n  return (\n    <AutoComplete\n      fetchSuggestions={handleFetch}\n      onSelect={action('selected')}\n    //renderOption={renderOption}\n    />\n  )\n}\n\nstoriesOf('AutoComplete Component', module)\n  .add('AutoComplete', SimpleComplete)\n\nexport default {\n  title: 'Example/Auto',\n  component: AutoComplete,\n  argTypes: {\n    \n  },\n} as Meta;\n\nconst Template: Story<AutoCompleteProps> = (args) => {\n  const handleFetch = (query: string) => {\n    return fetch(`https://api.github.com/search/users?q=${query}`)\n      .then(res => res.json())\n      .then(({ items }) => {\n        console.log(items)\n        return items.slice(0, 10).map((item: any) => ({ value: item.login, ...item }))\n      })\n  }\n  return (<><FontAwesomeIcon icon=\"spinner\" spin />\n  <Icon icon={faSpinner} spin></Icon>\n  <Icon icon='arrow-down' size='9x' theme='primary' />\n  < FontAwesomeIcon icon=\"stroopwafel\"/>\n  <AutoComplete  fetchSuggestions={handleFetch} onSelect= {(item) => {console.log(item);}}/></>)\n}\nexport const Primary = Template.bind({});\n\nPrimary.parameters = {\n  value: 333\n}\n","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/AutoComplete/autoComplete.tsx",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/hooks/useDebounce.tsx",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/hooks/useClickOutside.tsx",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Upload/upload.tsx",["120"],"import React, { ChangeEvent, useCallback, useRef, useState } from 'react'\nimport axios from 'axios'\n\nimport Dragger from './dragger'\nimport Button, {ButtonType} from '../Button/button'\nimport UploadList from './uploadList'\n\n// 文件上传的状态\nexport type UploadFileStatus = 'ready' | 'uploading' | 'success' | 'error'\n// 文件信息\nexport interface UploadFile {\n  uid: string;\n  size: number;\n  name: string;\n  status?: UploadFileStatus;\n  percent?: number;\n  raw?: File;\n  response?: any;\n  error?: any;\n}\ninterface IUploadProps {\n  action: string;\n  defaultFileList?: UploadFile[];\n  beforeUpload? : (file: File) => boolean | Promise<File>;\n  onChange?: (file: File) => void;\n  onProgress?: (percentage: number, file: File) => void;\n  onSuccess?: (data: any, file: File) => void;\n  onError?: (err: any, file: File) => void;\n  onRemove?: (file: UploadFile) => void;\n  headers?: {[key: string]: any };\n  name?: string;\n  data?: {[key: string]: any };\n  withCredentials?: boolean;\n  accept?: string;\n  multiple?: boolean;\n  drag?: boolean;\n}\nconst Upload: React.FC<IUploadProps> = (props) => {\n  const {\n    action,\n    defaultFileList,\n    beforeUpload,\n    onChange,\n    onProgress,\n    onSuccess,\n    onError,\n    onRemove,\n    name,\n    headers,\n    data,\n    withCredentials,\n    accept,\n    multiple,\n    children,\n    drag,\n  } = props\n  const fileInput = useRef<HTMLInputElement>(null)\n  const [fileList, setFileList] = useState<UploadFile[]>(defaultFileList? defaultFileList: [])\n  // 独立封装一个 同步更新 fileList 的函数\n  const updateFileList = (updateFile: UploadFile, updateObj: Partial<UploadFile>) => {\n    setFileList(prevList => {\n      return prevList.map(file => {\n        // 更新指定的 file 信息\n        if (file.uid === updateFile.uid) {\n          return { ...file, ...updateObj }\n        } else {\n          return file\n        }\n      })\n    })\n  }\n  const handleClick = useCallback(() => {\n    if (fileInput.current) {\n      fileInput.current.click()\n    }\n  }, [])\n  const handleFileChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const files = e.target.files;\n    if (!files) {\n      return;\n    }\n    // 上传\n    uploadFiles(files);\n    if (fileInput.current) {\n      // 上传后清空\n      fileInput.current.value = '';\n    }\n  }, [])\n  // 删除对应展示的列表文件\n  const handleRemove = (file: UploadFile) => {\n    setFileList((prevList) => {\n      return prevList.filter(item => item.uid !== file.uid)\n    })\n    if (onRemove) {\n      onRemove(file)\n    }\n  }\n  const uploadFiles = (file: FileList) => {\n    const postFiles = Array.from(file)\n    // 每一个文件独立上传\n    postFiles.forEach(file => {\n      if (!beforeUpload) {\n        post(file)\n      }else {\n        // 通过 beforeUpload 拦截验证\n        const result = beforeUpload(file)\n        if (result && result instanceof Promise) {\n          result.then(processedFile => {\n            post(processedFile)\n          })\n        }else if(result !== false) {\n          post(file)\n        }\n      }\n      \n    })\n  }\n  const post = (file: File) => {\n    // 上传时记录文件上传的信息及状态\n    let _file: UploadFile = {\n      uid: Date.now() + 'upload-file',\n      status: 'ready',\n      name: file.name,\n      size: file.size,\n      percent: 0,\n      raw: file\n    }\n    // 这里传入函数更新state 是 防止如果选择多个时只加载一个的问题\n    setFileList(prevList => {\n      return [_file, ...prevList]\n    })\n    const formData = new FormData()\n      formData.append(name || 'file', file)\n      if (data) {\n        Object.keys(data).forEach(key => {\n          formData.append(key, data[key])\n          \n        })\n      }\n      axios.post(action, formData, {\n        headers: {\n          ...headers,\n          \"Content-Type\": \"multipart/form-data\"\n        },\n        // 是否开启cokeye\n        withCredentials,\n        // 进度条\n        onUploadProgress: (e) => {\n          let percentage = Math.round((e.loaded * 100) / e.total) || 0;\n          console.log(\"percentage\", percentage);\n          \n          if (percentage < 100) {\n            // 当上传时候 实时更新 fileList 的进度条信息\n            updateFileList(_file, { percent: percentage, status: 'uploading'})\n            if (onProgress) {\n              onProgress(percentage, file)\n            }\n          }\n        }\n      }).then(resp => {\n        // 上传成功\n        // 更新对应的 file 文件信息\n        updateFileList(_file, {status: 'success', response: resp.data})\n        if (onSuccess) {\n          onSuccess(resp.data, file)\n        }\n        if (onChange) {\n          onChange(file)\n        }\n      }).catch(err => {\n        // 上传错误\n        // 更新对应的 file 文件信息\n        updateFileList(_file, { status: 'error', error: err})\n        if (onError) {\n          onError(err, file)\n        }\n        if (onChange) {\n          onChange(file)\n        }\n      })\n  }\n  return (\n    <div className=\"viking-upload-component\">\n      <Button btnType={ButtonType.Primary} onClick={handleClick}>Upload File</Button>\n      <div className=\"viking-upload-input\"\n        style={{display: 'inline-block'}}\n        onClick={handleClick}>\n          {drag ? \n            <Dragger onFile={(files) => {uploadFiles(files)}}>\n              {children}\n            </Dragger>:\n            children\n          }\n        <input\n          className=\"viking-file-input\"\n          style={{display: 'none'}}\n          ref={fileInput}\n          onChange={handleFileChange}\n          type=\"file\"\n          accept={accept}\n          multiple={multiple}\n        />\n      </div>\n      {/* <input type=\"file\" ref={fileInput} \n            onChange={handleFileChange} \n            accept={accept}\n            multiple={multiple} \n            className=\"viking-file-input\" \n            style={{display: 'none'}} /> */}\n      <UploadList fileList={fileList} onRemove={handleRemove} />\n    </div>\n  )\n}\n\nexport default Upload;","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Upload/upload.stories.tsx",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Upload/uploadList.tsx",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Progress/progress.tsx",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Upload/dragger.tsx",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"121","replacedBy":"125"},{"ruleId":"123","replacedBy":"126"},{"ruleId":"121","replacedBy":"125"},{"ruleId":"123","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":4,"column":27,"nodeType":"129","messageId":"130","endLine":4,"endColumn":47},{"ruleId":"127","severity":1,"message":"131","line":10,"column":11,"nodeType":"129","messageId":"130","endLine":10,"endColumn":27},{"ruleId":"127","severity":1,"message":"132","line":14,"column":11,"nodeType":"129","messageId":"130","endLine":14,"endColumn":26},{"ruleId":"133","severity":1,"message":"134","line":88,"column":6,"nodeType":"135","endLine":88,"endColumn":8,"suggestions":"136"},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],["137"],["138"],"@typescript-eslint/no-unused-vars","'FontAwesomeIconProps' is defined but never used.","Identifier","unusedVar","'LakerPlayerProps' is defined but never used.","'GithubUserProps' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'uploadFiles'. Either include it or remove the dependency array.","ArrayExpression",["139"],"no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},"Update the dependencies array to be: [uploadFiles]",{"range":"142","text":"143"},[2231,2233],"[uploadFiles]"]