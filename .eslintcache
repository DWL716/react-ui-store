[{"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/index.tsx":"1","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/reportWebVitals.ts":"2","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/App.tsx":"3","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Menu/subMenu.tsx":"4","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Button/button.tsx":"5","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Menu/menuItem.tsx":"6","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Menu/menu.tsx":"7","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Icon/icon.tsx":"8","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Transition/transition.tsx":"9","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/stories/Header.stories.tsx":"10","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/stories/Page.stories.tsx":"11","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/stories/Button.stories.tsx":"12","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/stories/Header.tsx":"13","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/stories/Button.tsx":"14","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/stories/Page.tsx":"15","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Button/button.stories.tsx":"16","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Input/input.stories.tsx":"17","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Input/input.tsx":"18","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/AutoComplete/autoComplete.stories.tsx":"19","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/AutoComplete/autoComplete.tsx":"20","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/hooks/useDebounce.tsx":"21","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/hooks/useClickOutside.tsx":"22","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Upload/upload.tsx":"23","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Upload/upload.stories.tsx":"24","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Upload/uploadList.tsx":"25","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Progress/progress.tsx":"26"},{"size":641,"mtime":1617775232707,"results":"27","hashOfConfig":"28"},{"size":425,"mtime":1606829178466,"results":"29","hashOfConfig":"28"},{"size":940,"mtime":1617865420514,"results":"30","hashOfConfig":"28"},{"size":2815,"mtime":1617184998515,"results":"31","hashOfConfig":"28"},{"size":1631,"mtime":1617343279280,"results":"32","hashOfConfig":"28"},{"size":843,"mtime":1607907970209,"results":"33","hashOfConfig":"28"},{"size":2220,"mtime":1617074709376,"results":"34","hashOfConfig":"28"},{"size":683,"mtime":1617775382962,"results":"35","hashOfConfig":"28"},{"size":781,"mtime":1617180155182,"results":"36","hashOfConfig":"28"},{"size":414,"mtime":1617202310309,"results":"37","hashOfConfig":"28"},{"size":509,"mtime":1617202726077,"results":"38","hashOfConfig":"28"},{"size":708,"mtime":1617341544174,"results":"39","hashOfConfig":"28"},{"size":1356,"mtime":1617200901341,"results":"40","hashOfConfig":"28"},{"size":941,"mtime":1617200901340,"results":"41","hashOfConfig":"28"},{"size":2424,"mtime":1617200901342,"results":"42","hashOfConfig":"28"},{"size":1511,"mtime":1617719288614,"results":"43","hashOfConfig":"28"},{"size":1955,"mtime":1617721709729,"results":"44","hashOfConfig":"28"},{"size":2258,"mtime":1617721724314,"results":"45","hashOfConfig":"28"},{"size":3187,"mtime":1617775664435,"results":"46","hashOfConfig":"28"},{"size":4875,"mtime":1617775564278,"results":"47","hashOfConfig":"28"},{"size":394,"mtime":1617631492369,"results":"48","hashOfConfig":"28"},{"size":499,"mtime":1617631484652,"results":"49","hashOfConfig":"28"},{"size":4740,"mtime":1617873310412,"results":"50","hashOfConfig":"28"},{"size":1774,"mtime":1617870893451,"results":"51","hashOfConfig":"28"},{"size":1428,"mtime":1617873486980,"results":"52","hashOfConfig":"28"},{"size":1049,"mtime":1617873189253,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1xhennm",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"65"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/index.tsx",[],["111","112"],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/reportWebVitals.ts",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/App.tsx",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Menu/subMenu.tsx",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Button/button.tsx",[],["113","114"],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Menu/menuItem.tsx",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Menu/menu.tsx",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Icon/icon.tsx",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Transition/transition.tsx",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/stories/Header.stories.tsx",[],["115","116"],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/stories/Page.stories.tsx",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/stories/Button.stories.tsx",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/stories/Header.tsx",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/stories/Button.tsx",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/stories/Page.tsx",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Button/button.stories.tsx",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Input/input.stories.tsx",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Input/input.tsx",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/AutoComplete/autoComplete.stories.tsx",["117","118","119"],"import React from 'react'\nimport { storiesOf, Meta, Story } from '@storybook/react'\nimport Icon from '../Icon/icon'\nimport { FontAwesomeIcon, FontAwesomeIconProps } from '@fortawesome/react-fontawesome'\nimport { action } from '@storybook/addon-actions'\nimport { library } from '@fortawesome/fontawesome-svg-core'; // 导入图标仓库\nimport { fas, faSpinner } from '@fortawesome/free-solid-svg-icons'\nimport { AutoComplete, AutoCompleteProps } from './autoComplete'\nlibrary.add(fas) // 需要重新再次添加把图标添加进仓库\ninterface LakerPlayerProps {\n  value: string;\n  number: number;\n}\ninterface GithubUserProps {\n  login: string;\n  url: string;\n  avatar_url: string;\n}\nconst SimpleComplete = () => {\n  // const lakers = ['bradley', 'pope', 'caruso', 'cook', 'cousins',\n  // 'james', 'AD', 'green', 'howard', 'kuzma', 'McGee', 'rando']\n  // const lakersWithNumber = [\n  //   {value: 'bradley', number: 11},\n  //   {value: 'pope', number: 1},\n  //   {value: 'caruso', number: 4},\n  //   {value: 'cook', number: 2},\n  //   {value: 'cousins', number: 15},\n  //   {value: 'james', number: 23},\n  //   {value: 'AD', number: 3},\n  //   {value: 'green', number: 14},\n  //   {value: 'howard', number: 39},\n  //   {value: 'kuzma', number: 0},\n  // ]\n  // const handleFetch = (query: string) => {\n  //   return lakers.filter(name => name.includes(query)).map(name => ({value: name}))\n  // }\n  // const handleFetch = (query: string) => {\n  //   return lakersWithNumber.filter(player => player.value.includes(query))\n  // }\n  const handleFetch = (query: string) => {\n    console.log(query);\n    \n    return fetch(`https://api.github.com/search/users?q=${query}`)\n      .then(res => res.json())\n      .then(({ items }) => {\n        console.log(items)\n        return items.slice(0, 10).map((item: any) => ({ value: item.login, ...item }))\n      })\n  }\n\n  // const renderOption = (item: DataSourceType) => {\n  //   const itemWithGithub = item as DataSourceType<GithubUserProps>\n  //   return (\n  //     <>\n  //       <h2>Name: {itemWithGithub.value}</h2>\n  //       <p>url: {itemWithGithub.url}</p>\n  //     </>\n  //   )\n  // }\n  return (\n    <AutoComplete\n      fetchSuggestions={handleFetch}\n      onSelect={action('selected')}\n    //renderOption={renderOption}\n    />\n  )\n}\n\nstoriesOf('AutoComplete Component', module)\n  .add('AutoComplete', SimpleComplete)\n\nexport default {\n  title: 'Example/Auto',\n  component: AutoComplete,\n  argTypes: {\n    \n  },\n} as Meta;\n\nconst Template: Story<AutoCompleteProps> = (args) => {\n  const handleFetch = (query: string) => {\n    return fetch(`https://api.github.com/search/users?q=${query}`)\n      .then(res => res.json())\n      .then(({ items }) => {\n        console.log(items)\n        return items.slice(0, 10).map((item: any) => ({ value: item.login, ...item }))\n      })\n  }\n  return (<><FontAwesomeIcon icon=\"spinner\" spin />\n  <Icon icon={faSpinner} spin></Icon>\n  <Icon icon='arrow-down' size='9x' theme='primary' />\n  < FontAwesomeIcon icon=\"stroopwafel\"/>\n  <AutoComplete  fetchSuggestions={handleFetch} onSelect= {(item) => {console.log(item);}}/></>)\n}\nexport const Primary = Template.bind({});\n\nPrimary.parameters = {\n  value: 333\n}\n","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/AutoComplete/autoComplete.tsx",["120"],"import React, { FC, useState, ChangeEvent, KeyboardEvent, ReactElement, useEffect, useRef } from 'react'\nimport classNames from 'classnames'\nimport Input, { InputProps } from '../Input/input'\nimport Icon from '../Icon/icon'\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons'\nimport Transition from '../Transition/transition'\nimport useDebounce from '../../hooks/useDebounce'\nimport useClickOutside from '../../hooks/useClickOutside'\n\ninterface DataSourceObject {\n  value: string;\n}\n// 定义复杂的数据类型\nexport type DataSourceType<T = {}> = T & DataSourceObject\nexport interface AutoCompleteProps extends Omit<InputProps, 'onSelect'> {\n  fetchSuggestions: (str: string) => DataSourceType[] | Promise<DataSourceType[]>;\n  onSelect?: (item: DataSourceType) => void;\n  renderOption?: (item: DataSourceType) => ReactElement;\n}\n\nexport const AutoComplete: FC<AutoCompleteProps> = (props) => {\n  const {\n    fetchSuggestions,\n    onSelect,\n    value,\n    renderOption,\n    ...restProps\n  } = props\n\n  const [ inputValue, setInputValue ] = useState(value as string)\n  // autoComplete 渲染列表\n  const [ suggestions, setSugestions ] = useState<DataSourceType[]>([])\n  // 加载渲染列表的状态\n  const [ loading, setLoading ] = useState(false)\n  const [ showDropdown, setShowDropdown] = useState(false)\n  const [ highlightIndex, setHighlightIndex] = useState(-1)\n  const triggerSearch = useRef(false)\n  const componentRef = useRef<HTMLDivElement>(null)\n  // 添加函数截流，规定300ms内连续请求时候就取消前一次请求\n  const debouncedValue = useDebounce(inputValue, 300)\n  useClickOutside(componentRef, () => { setSugestions([])})\n  useEffect(() => {\n    if (debouncedValue && triggerSearch.current) {\n      setSugestions([])\n      const results = fetchSuggestions(debouncedValue)\n      // 判断返回的是否是 promise 如果是就说明是后端请求，然后添加 loading 状态\n      if (results instanceof Promise) {\n        setLoading(true)\n        results.then(data => {\n          setLoading(false)\n          setSugestions(data)\n          if (data.length > 0) {\n            setShowDropdown(true)\n          }\n        })\n      } else {\n        setSugestions(results)\n        setShowDropdown(true)\n        if (results.length > 0) {\n          setShowDropdown(true)\n        } \n      }\n    } else {\n      setShowDropdown(false)\n    }\n    setHighlightIndex(-1)\n  }, [debouncedValue, fetchSuggestions])\n  // 使用\n  const highlight = (index: number) => {\n    if (index < 0) index = 0\n    if (index >= suggestions.length) {\n      index = suggestions.length - 1\n    }\n    setHighlightIndex(index)\n  }\n  // 检测按钮， 使用上下键来选择元素\n  const handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n    switch(e.keyCode) {\n      case 13:\n        if (suggestions[highlightIndex]) {\n          handleSelect(suggestions[highlightIndex])\n        }\n        break\n      case 38:\n        highlight(highlightIndex - 1)\n        break\n      case 40:\n        highlight(highlightIndex + 1)\n        break\n      case 27:\n        setShowDropdown(false)\n        break\n      default:\n        break\n    }\n  }\n  // input 输入内容\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    console.log(e);\n    \n    const value = e.target.value.trim()\n    setInputValue(value)\n    triggerSearch.current = true\n  }\n  // 点击下拉列表的某项，然后将其添加到 input 上\n  const handleSelect = (item: DataSourceType) => {\n    setInputValue(item.value)\n    setShowDropdown(false)\n    if (onSelect) {\n      onSelect(item)\n    }\n    triggerSearch.current = false\n  }\n  // 渲染下拉列表\n  const renderTemplate = (item: DataSourceType) => {\n    return renderOption ? renderOption(item) : item.value\n  }\n  const generateDropdown = () => {\n    return (\n      <Transition\n        in={showDropdown || loading}\n        animation=\"zoom-in-top\"\n        timeout={300}\n        onExited={() => {setSugestions([])}}\n      >\n        <ul className=\"viking-suggestion-list\">\n          { loading &&\n            <div className=\"suggstions-loading-icon\">\n              <Icon icon=\"spinner\" spin></Icon>\n            </div>\n          }\n          {suggestions.map((item, index) => {\n            const cnames = classNames('suggestion-item', {\n              'is-active': index === highlightIndex\n            })\n            return (\n              <li key={index} className={cnames} onClick={() => handleSelect(item)}>\n                {renderTemplate(item)}\n              </li>\n            )\n          })}\n        </ul>\n      </Transition>\n    )\n  }\n  return (\n    <div className=\"viking-auto-complete\" ref={componentRef}>\n      <Input\n        value={inputValue}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n        {...restProps}\n      />\n      {generateDropdown()}\n    </div>\n  )\n}\n\nexport default AutoComplete;\n\n","/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/hooks/useDebounce.tsx",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/hooks/useClickOutside.tsx",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Upload/upload.tsx",["121"],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Upload/upload.stories.tsx",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Upload/uploadList.tsx",[],"/Users/dengwenlong/Desktop/前端练习总/React总/React-UI-TS/react_ui_store/src/components/Progress/progress.tsx",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"122","replacedBy":"126"},{"ruleId":"124","replacedBy":"127"},{"ruleId":"122","replacedBy":"126"},{"ruleId":"124","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":4,"column":27,"nodeType":"130","messageId":"131","endLine":4,"endColumn":47},{"ruleId":"128","severity":1,"message":"132","line":10,"column":11,"nodeType":"130","messageId":"131","endLine":10,"endColumn":27},{"ruleId":"128","severity":1,"message":"133","line":14,"column":11,"nodeType":"130","messageId":"131","endLine":14,"endColumn":26},{"ruleId":"128","severity":1,"message":"134","line":5,"column":10,"nodeType":"130","messageId":"131","endLine":5,"endColumn":19},{"ruleId":"135","severity":1,"message":"136","line":72,"column":6,"nodeType":"137","endLine":72,"endColumn":8,"suggestions":"138"},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],["139"],["140"],"@typescript-eslint/no-unused-vars","'FontAwesomeIconProps' is defined but never used.","Identifier","unusedVar","'LakerPlayerProps' is defined but never used.","'GithubUserProps' is defined but never used.","'faSpinner' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'uploadFiles'. Either include it or remove the dependency array.","ArrayExpression",["141"],"no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},"Update the dependencies array to be: [uploadFiles]",{"range":"144","text":"145"},[1922,1924],"[uploadFiles]"]